type User {
  id: ID! @unique
  name: String!
  email: String! @unique
  password: String!
  answers:[Answer!]!
  birthday: String
  idtype: String
  clinician: Clinician
}

type Questionnaire{
  id: ID! @unique
  numberID: Int! @unique
  questions:[Question!]!
  questionairename: [Questionnairename!]!
}


type Clinician{
id: ID! @unique
name: String! 
officeaddress: String
phonenumber: String
}



type Questionnairename
{
  id: ID! @unique
  text: String!
  language: Language! 
  questionaire: Questionnaire!
}

type Question {
  id: ID! @unique
  number: Int! @unique
  description: String!
  questionType: QuestionType!
  questionText: [QuestionText!]!
  list: List
  alternative:[Alternatives!]!
}

type QuestionType {
  id: ID! @unique
  type: String! @unique
}

type QuestionText {
  id: ID! @unique
  text: String!
  language: Language!
  question: Question!
}

type Language {
  id: ID! @unique
  name: String! @unique
}

type Alternatives {
  id: ID! @unique
  description: String!
  value: Float!
  order: Int!
  listID: List
  alternativeText:[AlternativeText!]!
  question: Question
}

type AlternativeText {
  id: ID! @unique
  alternativeID: Alternatives!
  language: Language!
  text: String!
}

type List {
  id: ID! @unique
  description: String!
}

type Answer {
  id: ID! @unique
  question: Question!
  value: String!
  alternative: Alternatives
}

